using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace LIS.DAL{
    /// <summary>
    /// Strongly-typed collection for the ViewDanhsachBenhnhan class.
    /// </summary>
    [Serializable]
    public partial class ViewDanhsachBenhnhanCollection : ReadOnlyList<ViewDanhsachBenhnhan, ViewDanhsachBenhnhanCollection>
    {        
        public ViewDanhsachBenhnhanCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VIEW_DANHSACH_BENHNHAN view.
    /// </summary>
    [Serializable]
    public partial class ViewDanhsachBenhnhan : ReadOnlyRecord<ViewDanhsachBenhnhan>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VIEW_DANHSACH_BENHNHAN", TableType.View, DataService.GetInstance("ORM"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarAutoGeneratePatient = new TableSchema.TableColumn(schema);
                colvarAutoGeneratePatient.ColumnName = "AutoGeneratePatient";
                colvarAutoGeneratePatient.DataType = DbType.AnsiString;
                colvarAutoGeneratePatient.MaxLength = 13;
                colvarAutoGeneratePatient.AutoIncrement = false;
                colvarAutoGeneratePatient.IsNullable = false;
                colvarAutoGeneratePatient.IsPrimaryKey = false;
                colvarAutoGeneratePatient.IsForeignKey = false;
                colvarAutoGeneratePatient.IsReadOnly = false;
                
                schema.Columns.Add(colvarAutoGeneratePatient);
                
                TableSchema.TableColumn colvarTestHasResultCount = new TableSchema.TableColumn(schema);
                colvarTestHasResultCount.ColumnName = "Test_Has_Result_Count";
                colvarTestHasResultCount.DataType = DbType.Int32;
                colvarTestHasResultCount.MaxLength = 0;
                colvarTestHasResultCount.AutoIncrement = false;
                colvarTestHasResultCount.IsNullable = true;
                colvarTestHasResultCount.IsPrimaryKey = false;
                colvarTestHasResultCount.IsForeignKey = false;
                colvarTestHasResultCount.IsReadOnly = false;
                
                schema.Columns.Add(colvarTestHasResultCount);
                
                TableSchema.TableColumn colvarTestInfoCount = new TableSchema.TableColumn(schema);
                colvarTestInfoCount.ColumnName = "Test_Info_Count";
                colvarTestInfoCount.DataType = DbType.Int32;
                colvarTestInfoCount.MaxLength = 0;
                colvarTestInfoCount.AutoIncrement = false;
                colvarTestInfoCount.IsNullable = true;
                colvarTestInfoCount.IsPrimaryKey = false;
                colvarTestInfoCount.IsForeignKey = false;
                colvarTestInfoCount.IsReadOnly = false;
                
                schema.Columns.Add(colvarTestInfoCount);
                
                TableSchema.TableColumn colvarSexName = new TableSchema.TableColumn(schema);
                colvarSexName.ColumnName = "SexName";
                colvarSexName.DataType = DbType.String;
                colvarSexName.MaxLength = 4;
                colvarSexName.AutoIncrement = false;
                colvarSexName.IsNullable = true;
                colvarSexName.IsPrimaryKey = false;
                colvarSexName.IsForeignKey = false;
                colvarSexName.IsReadOnly = false;
                
                schema.Columns.Add(colvarSexName);
                
                TableSchema.TableColumn colvarBarcode = new TableSchema.TableColumn(schema);
                colvarBarcode.ColumnName = "Barcode";
                colvarBarcode.DataType = DbType.String;
                colvarBarcode.MaxLength = 50;
                colvarBarcode.AutoIncrement = false;
                colvarBarcode.IsNullable = true;
                colvarBarcode.IsPrimaryKey = false;
                colvarBarcode.IsForeignKey = false;
                colvarBarcode.IsReadOnly = false;
                
                schema.Columns.Add(colvarBarcode);
                
                TableSchema.TableColumn colvarDepartmentName = new TableSchema.TableColumn(schema);
                colvarDepartmentName.ColumnName = "Department_Name";
                colvarDepartmentName.DataType = DbType.String;
                colvarDepartmentName.MaxLength = 50;
                colvarDepartmentName.AutoIncrement = false;
                colvarDepartmentName.IsNullable = true;
                colvarDepartmentName.IsPrimaryKey = false;
                colvarDepartmentName.IsForeignKey = false;
                colvarDepartmentName.IsReadOnly = false;
                
                schema.Columns.Add(colvarDepartmentName);
                
                TableSchema.TableColumn colvarObjectTypeName = new TableSchema.TableColumn(schema);
                colvarObjectTypeName.ColumnName = "ObjectType_Name";
                colvarObjectTypeName.DataType = DbType.String;
                colvarObjectTypeName.MaxLength = 50;
                colvarObjectTypeName.AutoIncrement = false;
                colvarObjectTypeName.IsNullable = true;
                colvarObjectTypeName.IsPrimaryKey = false;
                colvarObjectTypeName.IsForeignKey = false;
                colvarObjectTypeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarObjectTypeName);
                
                TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
                colvarPatientId.ColumnName = "Patient_ID";
                colvarPatientId.DataType = DbType.Decimal;
                colvarPatientId.MaxLength = 0;
                colvarPatientId.AutoIncrement = false;
                colvarPatientId.IsNullable = false;
                colvarPatientId.IsPrimaryKey = false;
                colvarPatientId.IsForeignKey = false;
                colvarPatientId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientId);
                
                TableSchema.TableColumn colvarPid = new TableSchema.TableColumn(schema);
                colvarPid.ColumnName = "PID";
                colvarPid.DataType = DbType.String;
                colvarPid.MaxLength = 50;
                colvarPid.AutoIncrement = false;
                colvarPid.IsNullable = false;
                colvarPid.IsPrimaryKey = false;
                colvarPid.IsForeignKey = false;
                colvarPid.IsReadOnly = false;
                
                schema.Columns.Add(colvarPid);
                
                TableSchema.TableColumn colvarPatientName = new TableSchema.TableColumn(schema);
                colvarPatientName.ColumnName = "Patient_Name";
                colvarPatientName.DataType = DbType.String;
                colvarPatientName.MaxLength = 100;
                colvarPatientName.AutoIncrement = false;
                colvarPatientName.IsNullable = true;
                colvarPatientName.IsPrimaryKey = false;
                colvarPatientName.IsForeignKey = false;
                colvarPatientName.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientName);
                
                TableSchema.TableColumn colvarAddress = new TableSchema.TableColumn(schema);
                colvarAddress.ColumnName = "ADDRESS";
                colvarAddress.DataType = DbType.String;
                colvarAddress.MaxLength = 200;
                colvarAddress.AutoIncrement = false;
                colvarAddress.IsNullable = true;
                colvarAddress.IsPrimaryKey = false;
                colvarAddress.IsForeignKey = false;
                colvarAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarAddress);
                
                TableSchema.TableColumn colvarYearBirth = new TableSchema.TableColumn(schema);
                colvarYearBirth.ColumnName = "YEAR_BIRTH";
                colvarYearBirth.DataType = DbType.Int32;
                colvarYearBirth.MaxLength = 0;
                colvarYearBirth.AutoIncrement = false;
                colvarYearBirth.IsNullable = true;
                colvarYearBirth.IsPrimaryKey = false;
                colvarYearBirth.IsForeignKey = false;
                colvarYearBirth.IsReadOnly = false;
                
                schema.Columns.Add(colvarYearBirth);
                
                TableSchema.TableColumn colvarSex = new TableSchema.TableColumn(schema);
                colvarSex.ColumnName = "Sex";
                colvarSex.DataType = DbType.Boolean;
                colvarSex.MaxLength = 0;
                colvarSex.AutoIncrement = false;
                colvarSex.IsNullable = true;
                colvarSex.IsPrimaryKey = false;
                colvarSex.IsForeignKey = false;
                colvarSex.IsReadOnly = false;
                
                schema.Columns.Add(colvarSex);
                
                TableSchema.TableColumn colvarInsuranceNum = new TableSchema.TableColumn(schema);
                colvarInsuranceNum.ColumnName = "Insurance_Num";
                colvarInsuranceNum.DataType = DbType.AnsiString;
                colvarInsuranceNum.MaxLength = 20;
                colvarInsuranceNum.AutoIncrement = false;
                colvarInsuranceNum.IsNullable = true;
                colvarInsuranceNum.IsPrimaryKey = false;
                colvarInsuranceNum.IsForeignKey = false;
                colvarInsuranceNum.IsReadOnly = false;
                
                schema.Columns.Add(colvarInsuranceNum);
                
                TableSchema.TableColumn colvarDateupdate = new TableSchema.TableColumn(schema);
                colvarDateupdate.ColumnName = "DATEUPDATE";
                colvarDateupdate.DataType = DbType.DateTime;
                colvarDateupdate.MaxLength = 0;
                colvarDateupdate.AutoIncrement = false;
                colvarDateupdate.IsNullable = true;
                colvarDateupdate.IsPrimaryKey = false;
                colvarDateupdate.IsForeignKey = false;
                colvarDateupdate.IsReadOnly = false;
                
                schema.Columns.Add(colvarDateupdate);
                
                TableSchema.TableColumn colvarDiagnostic = new TableSchema.TableColumn(schema);
                colvarDiagnostic.ColumnName = "Diagnostic";
                colvarDiagnostic.DataType = DbType.String;
                colvarDiagnostic.MaxLength = 100;
                colvarDiagnostic.AutoIncrement = false;
                colvarDiagnostic.IsNullable = true;
                colvarDiagnostic.IsPrimaryKey = false;
                colvarDiagnostic.IsForeignKey = false;
                colvarDiagnostic.IsReadOnly = false;
                
                schema.Columns.Add(colvarDiagnostic);
                
                TableSchema.TableColumn colvarIdentifyNum = new TableSchema.TableColumn(schema);
                colvarIdentifyNum.ColumnName = "IdentifyNum";
                colvarIdentifyNum.DataType = DbType.String;
                colvarIdentifyNum.MaxLength = 20;
                colvarIdentifyNum.AutoIncrement = false;
                colvarIdentifyNum.IsNullable = true;
                colvarIdentifyNum.IsPrimaryKey = false;
                colvarIdentifyNum.IsForeignKey = false;
                colvarIdentifyNum.IsReadOnly = false;
                
                schema.Columns.Add(colvarIdentifyNum);
                
                TableSchema.TableColumn colvarDepartmentID = new TableSchema.TableColumn(schema);
                colvarDepartmentID.ColumnName = "DepartmentID";
                colvarDepartmentID.DataType = DbType.Int16;
                colvarDepartmentID.MaxLength = 0;
                colvarDepartmentID.AutoIncrement = false;
                colvarDepartmentID.IsNullable = true;
                colvarDepartmentID.IsPrimaryKey = false;
                colvarDepartmentID.IsForeignKey = false;
                colvarDepartmentID.IsReadOnly = false;
                
                schema.Columns.Add(colvarDepartmentID);
                
                TableSchema.TableColumn colvarRoom = new TableSchema.TableColumn(schema);
                colvarRoom.ColumnName = "Room";
                colvarRoom.DataType = DbType.String;
                colvarRoom.MaxLength = 50;
                colvarRoom.AutoIncrement = false;
                colvarRoom.IsNullable = true;
                colvarRoom.IsPrimaryKey = false;
                colvarRoom.IsForeignKey = false;
                colvarRoom.IsReadOnly = false;
                
                schema.Columns.Add(colvarRoom);
                
                TableSchema.TableColumn colvarBed = new TableSchema.TableColumn(schema);
                colvarBed.ColumnName = "Bed";
                colvarBed.DataType = DbType.String;
                colvarBed.MaxLength = 50;
                colvarBed.AutoIncrement = false;
                colvarBed.IsNullable = true;
                colvarBed.IsPrimaryKey = false;
                colvarBed.IsForeignKey = false;
                colvarBed.IsReadOnly = false;
                
                schema.Columns.Add(colvarBed);
                
                TableSchema.TableColumn colvarObjectType = new TableSchema.TableColumn(schema);
                colvarObjectType.ColumnName = "ObjectType";
                colvarObjectType.DataType = DbType.Int32;
                colvarObjectType.MaxLength = 0;
                colvarObjectType.AutoIncrement = false;
                colvarObjectType.IsNullable = true;
                colvarObjectType.IsPrimaryKey = false;
                colvarObjectType.IsForeignKey = false;
                colvarObjectType.IsReadOnly = false;
                
                schema.Columns.Add(colvarObjectType);
                
                TableSchema.TableColumn colvarHosStatus = new TableSchema.TableColumn(schema);
                colvarHosStatus.ColumnName = "Hos_Status";
                colvarHosStatus.DataType = DbType.Int32;
                colvarHosStatus.MaxLength = 0;
                colvarHosStatus.AutoIncrement = false;
                colvarHosStatus.IsNullable = true;
                colvarHosStatus.IsPrimaryKey = false;
                colvarHosStatus.IsForeignKey = false;
                colvarHosStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarHosStatus);
                
                TableSchema.TableColumn colvarDob = new TableSchema.TableColumn(schema);
                colvarDob.ColumnName = "DOB";
                colvarDob.DataType = DbType.DateTime;
                colvarDob.MaxLength = 0;
                colvarDob.AutoIncrement = false;
                colvarDob.IsNullable = true;
                colvarDob.IsPrimaryKey = false;
                colvarDob.IsForeignKey = false;
                colvarDob.IsReadOnly = false;
                
                schema.Columns.Add(colvarDob);
                
                TableSchema.TableColumn colvarLotID = new TableSchema.TableColumn(schema);
                colvarLotID.ColumnName = "LotID";
                colvarLotID.DataType = DbType.Int32;
                colvarLotID.MaxLength = 0;
                colvarLotID.AutoIncrement = false;
                colvarLotID.IsNullable = true;
                colvarLotID.IsPrimaryKey = false;
                colvarLotID.IsForeignKey = false;
                colvarLotID.IsReadOnly = false;
                
                schema.Columns.Add(colvarLotID);
                
                TableSchema.TableColumn colvarCanLamSangId = new TableSchema.TableColumn(schema);
                colvarCanLamSangId.ColumnName = "CanLamSang_ID";
                colvarCanLamSangId.DataType = DbType.String;
                colvarCanLamSangId.MaxLength = 4;
                colvarCanLamSangId.AutoIncrement = false;
                colvarCanLamSangId.IsNullable = true;
                colvarCanLamSangId.IsPrimaryKey = false;
                colvarCanLamSangId.IsForeignKey = false;
                colvarCanLamSangId.IsReadOnly = false;
                
                schema.Columns.Add(colvarCanLamSangId);
                
                TableSchema.TableColumn colvarTestCount = new TableSchema.TableColumn(schema);
                colvarTestCount.ColumnName = "Test_Count";
                colvarTestCount.DataType = DbType.Byte;
                colvarTestCount.MaxLength = 0;
                colvarTestCount.AutoIncrement = false;
                colvarTestCount.IsNullable = true;
                colvarTestCount.IsPrimaryKey = false;
                colvarTestCount.IsForeignKey = false;
                colvarTestCount.IsReadOnly = false;
                
                schema.Columns.Add(colvarTestCount);
                
                TableSchema.TableColumn colvarTestHasResult = new TableSchema.TableColumn(schema);
                colvarTestHasResult.ColumnName = "Test_Has_Result";
                colvarTestHasResult.DataType = DbType.Byte;
                colvarTestHasResult.MaxLength = 0;
                colvarTestHasResult.AutoIncrement = false;
                colvarTestHasResult.IsNullable = true;
                colvarTestHasResult.IsPrimaryKey = false;
                colvarTestHasResult.IsForeignKey = false;
                colvarTestHasResult.IsReadOnly = false;
                
                schema.Columns.Add(colvarTestHasResult);
                
                TableSchema.TableColumn colvarPrintStatus = new TableSchema.TableColumn(schema);
                colvarPrintStatus.ColumnName = "Print_Status";
                colvarPrintStatus.DataType = DbType.Byte;
                colvarPrintStatus.MaxLength = 0;
                colvarPrintStatus.AutoIncrement = false;
                colvarPrintStatus.IsNullable = true;
                colvarPrintStatus.IsPrimaryKey = false;
                colvarPrintStatus.IsForeignKey = false;
                colvarPrintStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrintStatus);
                
                TableSchema.TableColumn colvarHasAllResult = new TableSchema.TableColumn(schema);
                colvarHasAllResult.ColumnName = "Has_All_Result";
                colvarHasAllResult.DataType = DbType.Int16;
                colvarHasAllResult.MaxLength = 0;
                colvarHasAllResult.AutoIncrement = false;
                colvarHasAllResult.IsNullable = true;
                colvarHasAllResult.IsPrimaryKey = false;
                colvarHasAllResult.IsForeignKey = false;
                colvarHasAllResult.IsReadOnly = false;
                
                schema.Columns.Add(colvarHasAllResult);
                
                TableSchema.TableColumn colvarIsFinal = new TableSchema.TableColumn(schema);
                colvarIsFinal.ColumnName = "IsFinal";
                colvarIsFinal.DataType = DbType.Int16;
                colvarIsFinal.MaxLength = 0;
                colvarIsFinal.AutoIncrement = false;
                colvarIsFinal.IsNullable = true;
                colvarIsFinal.IsPrimaryKey = false;
                colvarIsFinal.IsForeignKey = false;
                colvarIsFinal.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsFinal);
                
                TableSchema.TableColumn colvarAge = new TableSchema.TableColumn(schema);
                colvarAge.ColumnName = "Age";
                colvarAge.DataType = DbType.Int32;
                colvarAge.MaxLength = 0;
                colvarAge.AutoIncrement = false;
                colvarAge.IsNullable = true;
                colvarAge.IsPrimaryKey = false;
                colvarAge.IsForeignKey = false;
                colvarAge.IsReadOnly = false;
                
                schema.Columns.Add(colvarAge);
                
                TableSchema.TableColumn colvarUserId = new TableSchema.TableColumn(schema);
                colvarUserId.ColumnName = "USER_ID";
                colvarUserId.DataType = DbType.String;
                colvarUserId.MaxLength = 50;
                colvarUserId.AutoIncrement = false;
                colvarUserId.IsNullable = true;
                colvarUserId.IsPrimaryKey = false;
                colvarUserId.IsForeignKey = false;
                colvarUserId.IsReadOnly = false;
                
                schema.Columns.Add(colvarUserId);
                
                TableSchema.TableColumn colvarChucVu = new TableSchema.TableColumn(schema);
                colvarChucVu.ColumnName = "ChucVu";
                colvarChucVu.DataType = DbType.String;
                colvarChucVu.MaxLength = 150;
                colvarChucVu.AutoIncrement = false;
                colvarChucVu.IsNullable = true;
                colvarChucVu.IsPrimaryKey = false;
                colvarChucVu.IsForeignKey = false;
                colvarChucVu.IsReadOnly = false;
                
                schema.Columns.Add(colvarChucVu);
                
                TableSchema.TableColumn colvarNgheNghiep = new TableSchema.TableColumn(schema);
                colvarNgheNghiep.ColumnName = "NgheNghiep";
                colvarNgheNghiep.DataType = DbType.String;
                colvarNgheNghiep.MaxLength = 150;
                colvarNgheNghiep.AutoIncrement = false;
                colvarNgheNghiep.IsNullable = true;
                colvarNgheNghiep.IsPrimaryKey = false;
                colvarNgheNghiep.IsForeignKey = false;
                colvarNgheNghiep.IsReadOnly = false;
                
                schema.Columns.Add(colvarNgheNghiep);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ORM"].AddSchema("VIEW_DANHSACH_BENHNHAN",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewDanhsachBenhnhan()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewDanhsachBenhnhan(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewDanhsachBenhnhan(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewDanhsachBenhnhan(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("AutoGeneratePatient")]
        [Bindable(true)]
        public string AutoGeneratePatient 
	    {
		    get
		    {
			    return GetColumnValue<string>("AutoGeneratePatient");
		    }
            set 
		    {
			    SetColumnValue("AutoGeneratePatient", value);
            }
        }
	      
        [XmlAttribute("TestHasResultCount")]
        [Bindable(true)]
        public int? TestHasResultCount 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Test_Has_Result_Count");
		    }
            set 
		    {
			    SetColumnValue("Test_Has_Result_Count", value);
            }
        }
	      
        [XmlAttribute("TestInfoCount")]
        [Bindable(true)]
        public int? TestInfoCount 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Test_Info_Count");
		    }
            set 
		    {
			    SetColumnValue("Test_Info_Count", value);
            }
        }
	      
        [XmlAttribute("SexName")]
        [Bindable(true)]
        public string SexName 
	    {
		    get
		    {
			    return GetColumnValue<string>("SexName");
		    }
            set 
		    {
			    SetColumnValue("SexName", value);
            }
        }
	      
        [XmlAttribute("Barcode")]
        [Bindable(true)]
        public string Barcode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Barcode");
		    }
            set 
		    {
			    SetColumnValue("Barcode", value);
            }
        }
	      
        [XmlAttribute("DepartmentName")]
        [Bindable(true)]
        public string DepartmentName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Department_Name");
		    }
            set 
		    {
			    SetColumnValue("Department_Name", value);
            }
        }
	      
        [XmlAttribute("ObjectTypeName")]
        [Bindable(true)]
        public string ObjectTypeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ObjectType_Name");
		    }
            set 
		    {
			    SetColumnValue("ObjectType_Name", value);
            }
        }
	      
        [XmlAttribute("PatientId")]
        [Bindable(true)]
        public decimal PatientId 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("Patient_ID");
		    }
            set 
		    {
			    SetColumnValue("Patient_ID", value);
            }
        }
	      
        [XmlAttribute("Pid")]
        [Bindable(true)]
        public string Pid 
	    {
		    get
		    {
			    return GetColumnValue<string>("PID");
		    }
            set 
		    {
			    SetColumnValue("PID", value);
            }
        }
	      
        [XmlAttribute("PatientName")]
        [Bindable(true)]
        public string PatientName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Name");
		    }
            set 
		    {
			    SetColumnValue("Patient_Name", value);
            }
        }
	      
        [XmlAttribute("Address")]
        [Bindable(true)]
        public string Address 
	    {
		    get
		    {
			    return GetColumnValue<string>("ADDRESS");
		    }
            set 
		    {
			    SetColumnValue("ADDRESS", value);
            }
        }
	      
        [XmlAttribute("YearBirth")]
        [Bindable(true)]
        public int? YearBirth 
	    {
		    get
		    {
			    return GetColumnValue<int?>("YEAR_BIRTH");
		    }
            set 
		    {
			    SetColumnValue("YEAR_BIRTH", value);
            }
        }
	      
        [XmlAttribute("Sex")]
        [Bindable(true)]
        public bool? Sex 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("Sex");
		    }
            set 
		    {
			    SetColumnValue("Sex", value);
            }
        }
	      
        [XmlAttribute("InsuranceNum")]
        [Bindable(true)]
        public string InsuranceNum 
	    {
		    get
		    {
			    return GetColumnValue<string>("Insurance_Num");
		    }
            set 
		    {
			    SetColumnValue("Insurance_Num", value);
            }
        }
	      
        [XmlAttribute("Dateupdate")]
        [Bindable(true)]
        public DateTime? Dateupdate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("DATEUPDATE");
		    }
            set 
		    {
			    SetColumnValue("DATEUPDATE", value);
            }
        }
	      
        [XmlAttribute("Diagnostic")]
        [Bindable(true)]
        public string Diagnostic 
	    {
		    get
		    {
			    return GetColumnValue<string>("Diagnostic");
		    }
            set 
		    {
			    SetColumnValue("Diagnostic", value);
            }
        }
	      
        [XmlAttribute("IdentifyNum")]
        [Bindable(true)]
        public string IdentifyNum 
	    {
		    get
		    {
			    return GetColumnValue<string>("IdentifyNum");
		    }
            set 
		    {
			    SetColumnValue("IdentifyNum", value);
            }
        }
	      
        [XmlAttribute("DepartmentID")]
        [Bindable(true)]
        public short? DepartmentID 
	    {
		    get
		    {
			    return GetColumnValue<short?>("DepartmentID");
		    }
            set 
		    {
			    SetColumnValue("DepartmentID", value);
            }
        }
	      
        [XmlAttribute("Room")]
        [Bindable(true)]
        public string Room 
	    {
		    get
		    {
			    return GetColumnValue<string>("Room");
		    }
            set 
		    {
			    SetColumnValue("Room", value);
            }
        }
	      
        [XmlAttribute("Bed")]
        [Bindable(true)]
        public string Bed 
	    {
		    get
		    {
			    return GetColumnValue<string>("Bed");
		    }
            set 
		    {
			    SetColumnValue("Bed", value);
            }
        }
	      
        [XmlAttribute("ObjectType")]
        [Bindable(true)]
        public int? ObjectType 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ObjectType");
		    }
            set 
		    {
			    SetColumnValue("ObjectType", value);
            }
        }
	      
        [XmlAttribute("HosStatus")]
        [Bindable(true)]
        public int? HosStatus 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Hos_Status");
		    }
            set 
		    {
			    SetColumnValue("Hos_Status", value);
            }
        }
	      
        [XmlAttribute("Dob")]
        [Bindable(true)]
        public DateTime? Dob 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("DOB");
		    }
            set 
		    {
			    SetColumnValue("DOB", value);
            }
        }
	      
        [XmlAttribute("LotID")]
        [Bindable(true)]
        public int? LotID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("LotID");
		    }
            set 
		    {
			    SetColumnValue("LotID", value);
            }
        }
	      
        [XmlAttribute("CanLamSangId")]
        [Bindable(true)]
        public string CanLamSangId 
	    {
		    get
		    {
			    return GetColumnValue<string>("CanLamSang_ID");
		    }
            set 
		    {
			    SetColumnValue("CanLamSang_ID", value);
            }
        }
	      
        [XmlAttribute("TestCount")]
        [Bindable(true)]
        public byte? TestCount 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Test_Count");
		    }
            set 
		    {
			    SetColumnValue("Test_Count", value);
            }
        }
	      
        [XmlAttribute("TestHasResult")]
        [Bindable(true)]
        public byte? TestHasResult 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Test_Has_Result");
		    }
            set 
		    {
			    SetColumnValue("Test_Has_Result", value);
            }
        }
	      
        [XmlAttribute("PrintStatus")]
        [Bindable(true)]
        public byte? PrintStatus 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Print_Status");
		    }
            set 
		    {
			    SetColumnValue("Print_Status", value);
            }
        }
	      
        [XmlAttribute("HasAllResult")]
        [Bindable(true)]
        public short? HasAllResult 
	    {
		    get
		    {
			    return GetColumnValue<short?>("Has_All_Result");
		    }
            set 
		    {
			    SetColumnValue("Has_All_Result", value);
            }
        }
	      
        [XmlAttribute("IsFinal")]
        [Bindable(true)]
        public short? IsFinal 
	    {
		    get
		    {
			    return GetColumnValue<short?>("IsFinal");
		    }
            set 
		    {
			    SetColumnValue("IsFinal", value);
            }
        }
	      
        [XmlAttribute("Age")]
        [Bindable(true)]
        public int? Age 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Age");
		    }
            set 
		    {
			    SetColumnValue("Age", value);
            }
        }
	      
        [XmlAttribute("UserId")]
        [Bindable(true)]
        public string UserId 
	    {
		    get
		    {
			    return GetColumnValue<string>("USER_ID");
		    }
            set 
		    {
			    SetColumnValue("USER_ID", value);
            }
        }
	      
        [XmlAttribute("ChucVu")]
        [Bindable(true)]
        public string ChucVu 
	    {
		    get
		    {
			    return GetColumnValue<string>("ChucVu");
		    }
            set 
		    {
			    SetColumnValue("ChucVu", value);
            }
        }
	      
        [XmlAttribute("NgheNghiep")]
        [Bindable(true)]
        public string NgheNghiep 
	    {
		    get
		    {
			    return GetColumnValue<string>("NgheNghiep");
		    }
            set 
		    {
			    SetColumnValue("NgheNghiep", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string AutoGeneratePatient = @"AutoGeneratePatient";
            
            public static string TestHasResultCount = @"Test_Has_Result_Count";
            
            public static string TestInfoCount = @"Test_Info_Count";
            
            public static string SexName = @"SexName";
            
            public static string Barcode = @"Barcode";
            
            public static string DepartmentName = @"Department_Name";
            
            public static string ObjectTypeName = @"ObjectType_Name";
            
            public static string PatientId = @"Patient_ID";
            
            public static string Pid = @"PID";
            
            public static string PatientName = @"Patient_Name";
            
            public static string Address = @"ADDRESS";
            
            public static string YearBirth = @"YEAR_BIRTH";
            
            public static string Sex = @"Sex";
            
            public static string InsuranceNum = @"Insurance_Num";
            
            public static string Dateupdate = @"DATEUPDATE";
            
            public static string Diagnostic = @"Diagnostic";
            
            public static string IdentifyNum = @"IdentifyNum";
            
            public static string DepartmentID = @"DepartmentID";
            
            public static string Room = @"Room";
            
            public static string Bed = @"Bed";
            
            public static string ObjectType = @"ObjectType";
            
            public static string HosStatus = @"Hos_Status";
            
            public static string Dob = @"DOB";
            
            public static string LotID = @"LotID";
            
            public static string CanLamSangId = @"CanLamSang_ID";
            
            public static string TestCount = @"Test_Count";
            
            public static string TestHasResult = @"Test_Has_Result";
            
            public static string PrintStatus = @"Print_Status";
            
            public static string HasAllResult = @"Has_All_Result";
            
            public static string IsFinal = @"IsFinal";
            
            public static string Age = @"Age";
            
            public static string UserId = @"USER_ID";
            
            public static string ChucVu = @"ChucVu";
            
            public static string NgheNghiep = @"NgheNghiep";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
